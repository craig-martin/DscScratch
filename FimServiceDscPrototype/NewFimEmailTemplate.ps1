function New-FimEmailTemplate
{
<#
.SYNOPSIS 
Creates a new email template in FIM

.PARAMETER DisplayName
The DisplayName value to set for the object. If this is not specified, the subject is used.

.PARAMETER Suject
The email subject of the message generated by the template.

.PARAMETER Body
The email body content of the message generated by the templae.

.PARAMETER Type
The type of template to create (Notification, Approval, Complete, Denied, or Timeout)

.PARAMETER Uri
The URI to the FIM Service. Defaults to localhost. 

.OUTPUTS
A GUID representing the ObjectID of the new email template   
#>
    [CmdletBinding()]
    [OutputType([Guid])]
    Param
    (
        [Parameter(Mandatory=$false)]
        [ValidateNotNull()]
        [String]
        $DisplayName = $Subject,
        [Parameter(Mandatory=$true)]
        [String]
        $Subject,
        [Parameter(Mandatory=$true)]
        [String]
        $Body,
        [Parameter(Mandatory=$true)]
        [ValidateSet("Notification","Approval","Complete","Denied","Timeout")]
        [String]
        $Type,
        [Parameter(Mandatory=$false)]
        [ValidateNotNull()]
        [String]
        $Uri = "http://localhost:5725",
        [parameter(Mandatory=$false)]
        [Switch]
        $PassThru = $true
    )
    process
    {
        New-FimImportObject -ObjectType EmailTemplate -State Create -Uri $Uri -Changes @{
	        DisplayName       = $DisplayName
            EmailTemplateType = $Type
	        EmailSubject      = $Subject
	        EmailBody         = $Body
        } -ApplyNow

        if ($PassThru.ToBool())
        {
            $objectID = Get-FimObjectID -ObjectType EmailTemplate -AttributeName DisplayName -AttributeValue $DisplayName    
            Write-Output $objectID
        }
    }
}
